from datetime import datetime, timedelta
from fastapi import APIRouter, Depends

from sqlalchemy.orm import Session
from app.database import get_db
from app.utils import get_current_user

from .. import schemas, crud

nutritionRouter = APIRouter(prefix="/nutrition")

#not secure might need to take a token
@nutritionRouter.get(
    "/today/"
)
def get_todays_goals(user_id: int,date: datetime, db: Session = Depends(get_db)):
    return crud.get_specific_nutrition(db, user_id, date)

@nutritionRouter.get(
    "/history"
)
def get_prev_days(start_date: datetime, user_id: int, days: int = 7,db: Session = Depends(get_db)):
    cuttoff_date = start_date - timedelta(days)
    return crud.get_range_nutrition(db, user_id, start_date, cuttoff_date)

@nutritionRouter.post(

)
def update_nutrition(db: Session = Depends(get_db)):
    pass

@nutritionRouter.patch(
    "/goals/"
)
def update_goals(db: Session = Depends(get_db)):
    pass
